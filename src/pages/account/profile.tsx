import FormField, { TextareaFormField } from "@src/components/forms/FormField";
import { isProfileComplete, useMustAuth } from "@src/contexts/Auth";
import { useFirestore } from "@src/contexts/Firebase";
import { applyPrivatePageLayout } from "@src/layouts/PrivatePageLayout";
import { AppPage } from "@src/types";
import classNames from "classnames";
import { doc, setDoc } from "firebase/firestore";
import Link from "next/link";
import { useRouter } from "next/router";
import { useEffect } from "react";
import { FormProvider, useForm } from "react-hook-form";
import { randomBytes } from "crypto";
import { useWallet } from "@src/contexts/Wallet";

export const AccountProfilePage: AppPage = () => {
  const db = useFirestore();
  const { user, profile } = useMustAuth();

  const methods = useForm({
    mode: "all",
    defaultValues: {
      bio: profile?.bio || "",
      imageUrl: profile?.imageUrl || "",
      legalName: profile?.legalName || "",
    },
  });
  const {
    watch,
    trigger,
    handleSubmit,
    formState: { isSubmitting, isDirty },
  } = methods;

  useEffect(() => {
    trigger("legalName");
  }, [trigger]);

  const imageUrl = watch("imageUrl");
  const legalName = watch("legalName");

  const { walletAddress, connect, disconnect } = useWallet();

  return (
    <div className="w-full max-w-xl m-auto">
      <div className="prose dark:prose-invert">
        <h1>LegalIt Profile</h1>
      </div>

      {isProfileComplete(profile) && walletAddress ? null : (
        <div className="mt-4 alert alert-warning">
          <svg
            xmlns="http://www.w3.org/2000/svg"
            className="stroke-current flex-shrink-0 h-6 w-6"
            fill="none"
            viewBox="0 0 24 24"
          >
            <path
              strokeLinecap="round"
              strokeLinejoin="round"
              strokeWidth="2"
              d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z"
            />
          </svg>
          You must complete your profile and connect to your wallet before you
          can access all the features on the platform
        </div>
      )}

      <FormProvider {...methods}>
        <form
          onSubmit={handleSubmit(async (data) => {
            await setDoc(doc(db, "profiles", user!.uid), {
              ...profile,
              ...data,
              userId: user?.uid,
            });

            window.location.reload();
          })}
        >
          <section className="mt-8">
            <FormField
              className="max-w-sm"
              hint="Name of the legal entity for the account, this will be used in all legal documents generated by the platform"
              name="legalName"
              label="Legal name"
              autoComplete="off"
              registerOptions={{
                required: {
                  value: true,
                  message: "A name must be provided",
                },
              }}
            />

            <FormField
              className="mt-4 max-w-sm"
              hint="The public facing name to be used for the storefront, defaults to the legal name"
              name="displayName"
              label="Display name"
              placeholder={legalName}
              showOptionalLabel
            />

            <div className="divider"></div>

            {walletAddress ? (
              <>
                <p className="mb-4 text-sm">
                  Connected to wallet{" "}
                  <a
                    href={`https://hashscan.io/#/testnet/account/${walletAddress}`}
                    rel="nofollow noreferrer"
                    target="_blank"
                    className="link link-secondary"
                  >
                    <span className="material-icons mr-1 text-sm">
                      query_stats
                    </span>
                    {walletAddress}
                  </a>
                </p>

                <button
                  type="button"
                  className="btn btn-primary btn-sm"
                  onClick={() => disconnect!()}
                >
                  Disconnect
                </button>
              </>
            ) : (
              <>
                <p className="mb-4 text-sm">
                  To take advantage of all the features on the platform, you
                  will need to connect to a HBAR compatible wallet
                </p>

                <div className="flex flex-row">
                  <button
                    type="button"
                    className="btn btn-secondary"
                    onClick={() =>
                      connect!().then(null, (err) => {
                        console.error("error", err);
                      })
                    }
                  >
                    Connect to wallet
                  </button>
                </div>

                <span className="text-xs">
                  The app currently supports the{" "}
                  <a
                    href="https://www.hashpack.app/hashconnect"
                    rel="nofollow noreferrer"
                    target="_blank"
                    className="link link-secondary"
                  >
                    Hashpack
                  </a>{" "}
                  browser extension to act as a wallet
                </span>
              </>
            )}

            <div className="divider"></div>

            <img
              src={
                imageUrl ||
                "https://via.placeholder.com/300x300/000000/FFFFFF?text=Image+not+available"
              }
              alt="Preview image for new property"
              className="m-auto my-8"
            />

            <FormField
              name="imageUrl"
              label="Profile image URL"
              className="mt-4 max-w-sm"
              placeholder="e.g. https://placekitten.com/g/200/300"
              showOptionalLabel
            />

            <TextareaFormField
              name="bio"
              label="Profile bio"
              placeholder="e.g. Battle-tested veterans of the great NFT battleground..."
              className="mt-4"
              showOptionalLabel
            />
          </section>

          <div className="mt-8 flex flex-row justify-end">
            <Link href="/dashboard">
              <a className="btn btn-ghost">Back to dashboard</a>
            </Link>

            <button
              className={classNames("ml-4 btn btn-primary", {
                "btn-disabled": !isDirty,
                loading: isSubmitting,
              })}
            >
              Update profile
            </button>
          </div>
        </form>
      </FormProvider>
    </div>
  );
};

AccountProfilePage.applyLayout = applyPrivatePageLayout;

export default AccountProfilePage;
